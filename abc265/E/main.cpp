#include <atcoder/all>
#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <bits/stdc++.h>

using namespace std;
using namespace atcoder;

// clang-format off
/* accelration */
// 高速バイナリ生成
#pragma GCC target("avx")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

// cin cout の結びつけ解除, stdioと同期しない(入出力非同期化)
// cとstdの入出力を混在させるとバグるので注意
struct Fast {
    Fast() {
        std::cin.tie(0);
        ios::sync_with_stdio(false);
    }
} fast;

/* alias */
using ull = unsigned long long;
using ll = long long;
using vi = vector<int>;
using vl = vector<long>;
using vll = vector<long long>;
using vvi = vector<vi>;
using vvl = vector<vl>;
using vvll = vector<vll>;
using vs = vector<string>;
using pii = pair<int, int>;

/* define short */
#define pb push_back
#define mp make_pair
#define all(obj) (obj).begin(), (obj).end()
#define YESNO(bool) if(bool){cout<<"YES"<<endl;}else{cout<<"NO"<<endl;}
#define yesno(bool) if(bool){cout<<"yes"<<endl;}else{cout<<"no"<<endl;}
#define YesNo(bool) if(bool){cout<<"Yes"<<endl;}else{cout<<"No"<<endl;}

/* REP macro */
#define reps(i, a, n) for (ll i = (a); i < (ll)(n); ++i)
#define rep(i, n) reps(i, 0, n)
#define rrep(i, n) reps(i, 1, n + 1)
#define repd(i, n) for(ll i=n-1;i>=0;i--)
#define rrepd(i, n) for(ll i=n;i>=1;i--)

/* debug */
// 標準エラー出力を含む提出はrejectされる場合もあるので注意
#define debug(x) cerr << "\033[33m(line:" << __LINE__ << ") " << #x << ": " << x << "\033[m" << endl;

// search_length: 走査するベクトル長の上限(先頭から何要素目までを検索対象とするか、1始まりで)
template<typename T>
inline bool vector_finder(std::vector<T> vec, T element, unsigned int search_length) {
    auto itr = std::find(vec.begin(), vec.end(), element);
    size_t index = std::distance(vec.begin(), itr);
    if (index == vec.size() || index >= search_length) { return false; } else { return true; }
}

template<typename T>
inline void print(const vector<T> &v, string s = " ") {
    rep(i, v.size()) cout << v[i] << (i != (ll) v.size() - 1 ? s : "\n");
}

template<typename T, typename S>
inline void print(const pair<T, S> &p) { cout << p.first << " " << p.second << endl; }

template<typename T>
inline void print(const T &x) { cout << x << "\n"; }

template<typename T, typename S>
inline void print(const vector<pair<T, S>> &v) { for (auto &&p: v) print(p); }

// 第一引数と第二引数を比較し、第一引数(a)をより大きい/小さい値に上書き
template<typename T>
inline bool chmin(T &a, const T &b) {
    bool compare = a > b;
    if (a > b) a = b;
    return compare;
}

template<typename T>
inline bool chmax(T &a, const T &b) {
    bool compare = a < b;
    if (a < b) a = b;
    return compare;
}

using mint = static_modint<998244353>;
//const long long MOD = 998244353;

void solve(long long N, long long M, long long A, long long B, long long C, long long D, long long E, long long F,
           std::vector<long long> X, std::vector<long long> Y) {
    vector<map<ll, map<ll, mint>>> a;
    vector<pair<ll, ll>> XX;
    rep(i, M) {
        XX.pb(make_pair(X[i], Y[i]));
    }
    std::sort(XX.begin(), XX.end());
    map<ll, map<ll, mint>> as;
    map<ll, mint> ass;
    ass.insert(make_pair(0, 1));
    as.insert(make_pair(0, ass));
    a.pb(as);
    rrep(i, N) {
//        cout << i << endl;
        map<ll, map<ll, mint>> aaa;
        a.pb(aaa);
        for (pair<ll, map<ll, mint>> p: a[i - 1]) {
            for (pair<ll, mint> q: p.second) {
                if (q.second.val() > 0) {
                    a[i][p.first + A][q.first + B] += q.second;
                    a[i][p.first + C][q.first + D] += q.second;
                    a[i][p.first + E][q.first + F] += q.second;
                }
            }
        }
        for (pair<ll, map<ll, mint>> p: a[i]) {
            for (pair<ll, mint> q: p.second) {
                if (M > 0) {
                    pair<ll, ll> xxx = XX[lower_bound(XX.begin(), XX.end(), make_pair(p.first, q.first)) - XX.begin()];
                    if (xxx.first == p.first && xxx.second == q.first) {
                        a[i][p.first][q.first] = 0;
                    }
                }
            }
        }
//        for (pair<ll, map<ll, mint>> p: a[i]) {
//            for (pair<ll, mint> q: p.second) {
//                cout << p.first << " " << q.first << " " << q.second.val() << endl;
//            }
//        }
    }
    mint ret = 0;
    for (pair<ll, map<ll, mint>> p: a[N]) {
        for (pair<ll, mint> q: p.second) {
            ret += a[N][p.first][q.first];
        }
    }
    cout << ret.val() << endl;
}

// Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main() {
    long long N;
    (void) std::scanf("%lld", &N);
    long long M;
    (void) std::scanf("%lld", &M);
    long long A;
    (void) std::scanf("%lld", &A);
    long long B;
    (void) std::scanf("%lld", &B);
    long long C;
    (void) std::scanf("%lld", &C);
    long long D;
    (void) std::scanf("%lld", &D);
    long long E;
    (void) std::scanf("%lld", &E);
    long long F;
    (void) std::scanf("%lld", &F);
    std::vector<long long> X(M);
    std::vector<long long> Y(M);
    for (int i = 0; i < M; i++) {
        (void) std::scanf("%lld", &X[i]);
        (void) std::scanf("%lld", &Y[i]);
    }
    solve(N, M, A, B, C, D, E, F, std::move(X), std::move(Y));
    return 0;
}
